{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","REACT_APP_DATABASE_URL","projectId","storageBucket","messagingSenderId","appId","firebase","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","pushState","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","excact","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91104dfc.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    // apiKey: \"AIzaSyBsSuJgIj0KGPhlGkiEodxxHMWweBsJNMo\",\n    // authDomain: \"nwitter-f7e72.firebaseapp.com\",\n    // databaseURL: \"https://nwitter-f7e72.firebaseio.com\",\n    // projectId: \"nwitter-f7e72\",\n    // storageBucket: \"nwitter-f7e72.appspot.com\",\n    // messagingSenderId: \"1064042006072\",\n    // appId: \"1:1064042006072:web:a3eb53899d31f464a808cd\"\n\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                data = await authService.createUserWithEmailAndPassword(\n                    email,\n                    password\n                );\n            } else {\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    value={email}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    value={password}\n                    className=\"authInput\"\n                    onChange={onChange}\n                />\n                <input\n                    type=\"submit\"\n                    className=\"authInput authSubmit\"\n                    value={newAccount ? \"Create Account\" : \"Sign In\"}\n                />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    );\n};\nexport default AuthForm;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faTwitter,\n    faGoogle,\n    faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target: { name },\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n    };\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{ marginBottom: 30 }}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n            </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n            </button>\n            </div>\n        </div>\n    );\n};\nexport default Auth;\n","import React, { useState } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are U sure you want to delete this nweet?\")\n        if (ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    };\n    const toggleEditing = () => setEditing((prev) => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text: newNweet,\n        });\n        setEditing(false);\n    };\n    const onChange = (event) => {\n        const { target: { value },\n        } = event;\n        setNewNweet(value);\n    };\n    return (\n        <div className=\"nweet\">\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Edit your nweet\"\n                            value={newNweet}\n                            required\n                            autoFocus\n                            onChange={onChange}\n                            className=\"formInput\"\n                        />\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n                    </form>\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                        Cancel\n                    </span>\n                </>\n            ) : (\n                    <>\n                        <h4>{nweetObj.text}</h4>\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n                        {isOwner && (\n\n                            <div class=\"nweet__actions\">\n                                <span onClick={onDeleteClick}>\n                                    <FontAwesomeIcon icon={faTrash} />\n                                </span>\n                                <span onClick={toggleEditing}>\n                                    <FontAwesomeIcon icon={faPencilAlt} />\n                                </span>\n                            </div>\n\n                        )}\n                    </>\n                )}\n        </div >\n    );\n};\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        if (nweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService\n                .ref()\n                .child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        };\n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNweet(value);\n    };\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n    const onClearAttachment = () => setAttachment(\"\");\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                    className=\"factoryInput__input\"\n                    value={nweet}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label for=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}\n\n            />\n\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img\n                        src={attachment}\n                        style={{\n                            backgroundImage: attachment,\n                        }}\n                    />\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n\n                </div>\n            )}\n        </form>\n    );\n};\nexport default NweetFactory;","import React, { useState, useEffect } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n    useEffect(() => {\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n            const nweetArray = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data(),\n            }));\n            setNweets(nweetArray);\n        });\n    }, []);\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj} />\n            <div style={{ marginTop: 30 }}>\n                {nweets.map((nweet) => (\n                    <Nweet\n                        key={nweet.id}\n                        nweetObj={nweet}\n                        isOwner={nweet.creatorId === userObj.uid}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\nexport default Home;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n    <nav>\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n            <li>\n                <Link to=\"/\" style={{ marginRight: 10 }}>\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n                </Link>\n            </li>\n            <li>\n                <Link\n                    to=\"/profile\"\n                    style={{\n                        marginLeft: 10,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        fontSize: 12,\n                    }}\n                >\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                    <span style={{ marginTop: 10 }}>\n                        {userObj.displayName\n                            ? `${userObj.displayName}의 Profile`\n                            : \"Profile\"}\n                    </span>\n                </Link>\n            </li>\n        </ul>\n    </nav>\n);\nexport default Navigation;","import React, { useState } from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.pushState(\"/\");\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input\n                    onChange={onChange}\n                    type=\"text\"\n                    autoFocus\n                    placeholder=\"Display name\"\n                    value={newDisplayName}\n                    className=\"formInput\"\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Update Profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}\n                />\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n      </span>\n        </div>\n    );\n};","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from 'components/Navigation';\nimport Profile from 'routes/Profile';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <div\n                        style={{\n                            maxWidth: 890,\n                            width: \"100%\",\n                            margin: \"0 auto\",\n                            marginTop: 80,\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\n                        </Route>\n                        {/* <Redirect from=\"*\" to=\"/\" /> */}\n                    </div>\n                ) : (\n                        <>\n                            <Route excact path=\"/\">\n                                <Auth />\n                            </Route>\n                            {/* <Redirect from=\"*\" to=\"/\" /> */}\n                        </>\n                    )}\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;\n\n","import React, { useState, useEffect } from 'react';\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\"Initializing...\")}\n      {/* <footer>&copy; Nwitter {new Date().getFullYear()}</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// unset HOST --> MAC local host 세팅 \n// npm start "],"sourceRoot":""}